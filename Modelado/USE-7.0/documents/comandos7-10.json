Clase06> db.Clientes.find({}, {"nombre": 1, "edad": 1, "_id": 0}).sort({"edad": -1})
[
  { nombre: 'Elena Vargas', edad: 55 },
  { nombre: 'María López', edad: 42 },
  { nombre: 'Carlos Rodríguez', edad: 35 },
  { nombre: 'Laura Chen', edad: 31 },
  { nombre: 'David Kim', edad: 29 },
  { nombre: 'Ana García', edad: 28 },
  { nombre: 'Pedro Martínez', edad: 25 },
  { nombre: 'Alejandro Ruiz', edad: 19 }
]
Clase06> db.Clientes.find({}, {"nombre": 1, "edad": 1, "_id": 0}).sort({"edad": 1})
[
  { nombre: 'Alejandro Ruiz', edad: 19 },
  { nombre: 'Pedro Martínez', edad: 25 },
  { nombre: 'Ana García', edad: 28 },
  { nombre: 'David Kim', edad: 29 },
  { nombre: 'Laura Chen', edad: 31 },
  { nombre: 'Carlos Rodríguez', edad: 35 },
  { nombre: 'María López', edad: 42 },
  { nombre: 'Elena Vargas', edad: 55 }
]

// El limit limita la cantidad de elementos a X
Clase06> db.Clientes.find({}, {"nombre": 1, "edad": 1, "_id": 0}).sort({"edad": 1}).limit(3)
[
  { nombre: 'Alejandro Ruiz', edad: 19 },
  { nombre: 'Pedro Martínez', edad: 25 },
  { nombre: 'Ana García', edad: 28 }
]

// El skip se skipea X elemtos
Clase06> db.Clientes.find({}, {"nombre": 1, "edad": 1, "_id": 0}).sort({"edad": 1}).skip(2).limit(3)
[
  { nombre: 'Ana García', edad: 28 },
  { nombre: 'David Kim', edad: 29 },
  { nombre: 'Laura Chen', edad: 31 }
]


// Deprecado
Clase06> db.Clientes.find({}, {"nombre": 1, "edad": 1, "_id": 0}).sort({"edad": 1}).skip(2).limit(3).count()
3
Clase06> db.Clientes.find().count()
8

// Este no está deprecado
Clase06> db.Clientes.countDocuments()
8
Clase06> db.Clientes.countDocuments({"direccion.ciudad":"Madrid"})
2

// AND implícito
Clase06> db.Clientes.find({
	$and: [
		{"categorias": "premium"},
		{"edad": {$gt:30}}
	]
},
{"nombre":1, "edad":1, "categorias":1, "_id":0})

// Operador exist
Clase06> db.Clientes.find({"telefono": {$exists: true}}, {"_id":0, "nombre":1, "telefono": 1})
[
  { nombre: 'Ana García', telefono: '+34 611 223 344' },
  { nombre: 'Carlos Rodríguez', telefono: '+34 622 334 455' },
  { nombre: 'María López', telefono: '+34 633 445 566' },
  { nombre: 'Pedro Martínez', telefono: '+34 644 556 677' },
  { nombre: 'Laura Chen', telefono: '+34 655 667 788' },
  { nombre: 'Alejandro Ruiz', telefono: '+34 666 778 899' },
  { nombre: 'Elena Vargas', telefono: '+34 677 889 900' },
  { nombre: 'David Kim', telefono: '+34 688 990 011' }
]

// Operador type
Clase06> db.Clientes.find({"edad": {$type: "int"}}, {"_id":0, "nombre":1, "edad": 1})
[	
  { nombre: 'Ana García', edad: 28 },
  { nombre: 'Carlos Rodríguez', edad: 35 },
  { nombre: 'María López', edad: 42 },
  { nombre: 'Pedro Martínez', edad: 25 },
  { nombre: 'Laura Chen', edad: 31 },
  { nombre: 'Alejandro Ruiz', edad: 19 },
  { nombre: 'Elena Vargas', edad: 55 },
  { nombre: 'David Kim', edad: 29 }
]

// Operador in
Clase06> db.Clientes.find({"edad": {$in: [19, 25, 28]}}, {"_id":0, "nombre":1, "edad": 1})
[
  { nombre: 'Ana García', edad: 28 },
  { nombre: 'Pedro Martínez', edad: 25 },
  { nombre: 'Alejandro Ruiz', edad: 19 }
]

Clase06> db.Clientes.find(
	{
		$and:[
			{"direccion": {$type: "object"}},
			{"fecha_registro": {$type: "date"}},
			{"categorias": {$type: "array"}}
		]
	},
	{"_id":0, "nombre":1, "direccion":1, "fecha_registro":1, "categorias":1}
)


// INDICES

Clase06> db.Clientes.getIndexes()
[ { v: 2, key: { _id: 1 }, name: '_id_' } ]

Clase06> db.Clientes.dropIndex("_id_")
MongoServerError[InvalidOptions]: cannot drop _id index

Clase06> db.Clientes.find({"email": "ana.garcia@email.com"}).explain("executionStats")
{
  explainVersion: '1',
  queryPlanner: {
    namespace: 'Clase06.Clientes',
    parsedQuery: { email: { '$eq': 'ana.garcia@email.com' } },
    indexFilterSet: false,
    queryHash: 'ED28E3D2',
    planCacheShapeHash: 'ED28E3D2',
    planCacheKey: '30FCCA9A',
    optimizationTimeMillis: 0,
    maxIndexedOrSolutionsReached: false,
    maxIndexedAndSolutionsReached: false,
    maxScansToExplodeReached: false,
    prunedSimilarIndexes: false,
    winningPlan: {
      isCached: false,
      stage: 'COLLSCAN',
      filter: { email: { '$eq': 'ana.garcia@email.com' } },
      direction: 'forward'
    },
    rejectedPlans: []
  },
  executionStats: {
    executionSuccess: true,
    nReturned: 1,
    executionTimeMillis: 0,
    totalKeysExamined: 0,
    totalDocsExamined: 8,
    executionStages: {
      isCached: false,
      stage: 'COLLSCAN',
      filter: { email: { '$eq': 'ana.garcia@email.com' } },
      nReturned: 1,
      executionTimeMillisEstimate: 0,
      works: 9,
      advanced: 1,
      needTime: 7,
      needYield: 0,
      saveState: 0,
      restoreState: 0,
      isEOF: 1,
      direction: 'forward',
      docsExamined: 8
    }
  },
  queryShapeHash: 'DB0840869E9F72F71F2CDE58094C4B3653A6DFA18CAD0024930A996275CF1D23',
  command: {
    find: 'Clientes',
    filter: { email: 'ana.garcia@email.com' },
    '$db': 'Clase06'
  },
  serverInfo: {
    host: '0d4879eb4321',
    port: 27017,
    version: '8.0.14',
    gitVersion: 'bbdb887c2ac94424af0ee8fcaad39203bdf98671'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600,
    internalQueryFrameworkControl: 'trySbeRestricted',
    internalQueryPlannerIgnoreIndexWithCollationForRegex: 1
  },
  ok: 1
}

Clase06> db.Clientes.createIndex({"email":1})
email_1
Clase06> db.Clientes.find({"email": "ana.garcia@email.com"}).explain("executionStats")
{
  explainVersion: '1',
  queryPlanner: {
    namespace: 'Clase06.Clientes',
    parsedQuery: { email: { '$eq': 'ana.garcia@email.com' } },
    indexFilterSet: false,
    queryHash: 'ED28E3D2',
    planCacheShapeHash: 'ED28E3D2',
    planCacheKey: '1E950542',
    optimizationTimeMillis: 2,
    maxIndexedOrSolutionsReached: false,
    maxIndexedAndSolutionsReached: false,
    maxScansToExplodeReached: false,
    prunedSimilarIndexes: false,
    winningPlan: {
      isCached: false,
      stage: 'FETCH',
      inputStage: {
        stage: 'IXSCAN',
        keyPattern: { email: 1 },
        indexName: 'email_1',
        isMultiKey: false,
        multiKeyPaths: { email: [] },
        isUnique: false,
        isSparse: false,
        isPartial: false,
        indexVersion: 2,
        direction: 'forward',
        indexBounds: {
          email: [ '["ana.garcia@email.com", "ana.garcia@email.com"]' ]
        }
      }
    },
    rejectedPlans: []
  },
  executionStats: {
    executionSuccess: true,
    nReturned: 1,
    executionTimeMillis: 5,
    totalKeysExamined: 1,
    totalDocsExamined: 1,
    executionStages: {
      isCached: false,
      stage: 'FETCH',
      nReturned: 1,
      executionTimeMillisEstimate: 0,
      works: 2,
      advanced: 1,
      needTime: 0,
      needYield: 0,
      saveState: 0,
      restoreState: 0,
      isEOF: 1,
      docsExamined: 1,
      alreadyHasObj: 0,
      inputStage: {
        stage: 'IXSCAN',
        nReturned: 1,
        executionTimeMillisEstimate: 0,
        works: 2,
        advanced: 1,
        needTime: 0,
        needYield: 0,
        saveState: 0,
        restoreState: 0,
        isEOF: 1,
        keyPattern: { email: 1 },
        indexName: 'email_1',
        isMultiKey: false,
        multiKeyPaths: { email: [] },
        isUnique: false,
        isSparse: false,
        isPartial: false,
        indexVersion: 2,
        direction: 'forward',
        indexBounds: {
          email: [ '["ana.garcia@email.com", "ana.garcia@email.com"]' ]
        },
        keysExamined: 1,
        seeks: 1,
        dupsTested: 0,
        dupsDropped: 0
      }
    }
  },
  queryShapeHash: 'DB0840869E9F72F71F2CDE58094C4B3653A6DFA18CAD0024930A996275CF1D23',
  command: {
    find: 'Clientes',
    filter: { email: 'ana.garcia@email.com' },
    '$db': 'Clase06'
  },
  serverInfo: {
    host: '0d4879eb4321',
    port: 27017,
    version: '8.0.14',
    gitVersion: 'bbdb887c2ac94424af0ee8fcaad39203bdf98671'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600,
    internalQueryFrameworkControl: 'trySbeRestricted',
    internalQueryPlannerIgnoreIndexWithCollationForRegex: 1
  },
  ok: 1
}

Clase06> db.Clientes.createIndex({"direccion.ciudad":1,"edad":-1},{name:"ciudad_edad"})
ciudad_edad
Clase06> db.archivoClientes.find({"direccion.ciudad":"Madrid","edad":{$gte:25}}).explain("executionStats")
{
  explainVersion: '1',
  queryPlanner: {
    namespace: 'Clase06.archivoClientes',
    parsedQuery: {
      '$and': [
        { 'direccion.ciudad': { '$eq': 'Madrid' } },
        { edad: { '$gte': 25 } }
      ]
    },
    indexFilterSet: false,
    optimizationTimeMillis: 0,
    maxIndexedOrSolutionsReached: false,
    maxIndexedAndSolutionsReached: false,
    maxScansToExplodeReached: false,
    prunedSimilarIndexes: false,
    winningPlan: { isCached: false, stage: 'EOF' },
    rejectedPlans: []
  },
  executionStats: {
    executionSuccess: true,
    nReturned: 0,
    executionTimeMillis: 0,
    totalKeysExamined: 0,
    totalDocsExamined: 0,
    executionStages: {
      isCached: false,
      stage: 'EOF',
      nReturned: 0,
      executionTimeMillisEstimate: 0,
      works: 1,
      advanced: 0,
      needTime: 0,
      needYield: 0,
      saveState: 0,
      restoreState: 0,
      isEOF: 1
    }
  },
  queryShapeHash: '693C342C0434B4ECDBF70BE4450FEBA8E09D3721676BAA9210BCB49039F301FF',
  command: {
    find: 'archivoClientes',
    filter: { 'direccion.ciudad': 'Madrid', edad: { '$gte': 25 } },
    '$db': 'Clase06'
  },
  serverInfo: {
    host: '0d4879eb4321',
    port: 27017,
    version: '8.0.14',
    gitVersion: 'bbdb887c2ac94424af0ee8fcaad39203bdf98671'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600,
    internalQueryFrameworkControl: 'trySbeRestricted',
    internalQueryPlannerIgnoreIndexWithCollationForRegex: 1
  },
  ok: 1
}